// Code generated by "stringer -type=NBTTag"; DO NOT EDIT.

package data

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TAG_End-0]
	_ = x[TAG_Byte-1]
	_ = x[TAG_Short-2]
	_ = x[TAG_Int-3]
	_ = x[TAG_Long-4]
	_ = x[TAG_Float-5]
	_ = x[TAG_Double-6]
	_ = x[TAG_Byte_Array-7]
	_ = x[TAG_String-8]
	_ = x[TAG_List-9]
	_ = x[TAG_Compound-10]
	_ = x[TAG_Int_Array-11]
	_ = x[TAG_Long_Array-12]
}

const _NBTTag_name = "TAG_EndTAG_ByteTAG_ShortTAG_IntTAG_LongTAG_FloatTAG_DoubleTAG_Byte_ArrayTAG_StringTAG_ListTAG_CompoundTAG_Int_ArrayTAG_Long_Array"

var _NBTTag_index = [...]uint8{0, 7, 15, 24, 31, 39, 48, 58, 72, 82, 90, 102, 115, 129}

func (i NBTTag) String() string {
	if i < 0 || i >= NBTTag(len(_NBTTag_index)-1) {
		return "NBTTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NBTTag_name[_NBTTag_index[i]:_NBTTag_index[i+1]]
}
